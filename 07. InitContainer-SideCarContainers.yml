#init containers - These containers run before any application container run
# these containers should succeed before the acutal application container start.
# you can have multiple application containers in you pod

#diff between init container and normal containers:
# init will run in series (one container after another container and should be fail to start next container)
# init containers are short lived. Normal containers will run as long it serves the requirement.

#init container example
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
  namespace: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
        - name: initvolume # create volume for init containers
          hostPath:
            path: /local/volume/path/
      initContainers: #initcontainers
        - name: initcontainer
          image: nginx
          volumeMounts:
            - name: initvolume # Store data generated by this
              mountPath: /container/mount/path
      containers:
      - name: nginx-image
        image: nginx
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
      - name: sidecarcontainer # this is just like any other container and will run like other container, and share the resources of pod
        image: nginx
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
          - name: initvolume
            mountPath: /path/
#sidecar containers - this container will run parallely with the main containers and share the same resources of main containers. It should be attached with any main container or it doest make any use.
